// Code generated by wunderctl. DO NOT EDIT.

import type function_IncrementalData from "../../.wundergraph/operations/incremental/data";
import type function_IncrementalDelay from "../../.wundergraph/operations/incremental/delay";
import type function_ThemaGet from "../../.wundergraph/operations/thema/get";
import type function_UsersGet from "../../.wundergraph/operations/users/get";
import type function_UsersSubscribe from "../../.wundergraph/operations/users/subscribe";
import type function_UsersUpdate from "../../.wundergraph/operations/users/update";
import type { ExtractInput, ExtractResponse } from "@wundergraph/sdk/operations";
import type { OperationErrors } from "./ts-operation-errors";
import type { GraphQLError } from "@wundergraph/sdk/client";

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface CustomerInput {
	customerId: string;
}

export interface CustomerInternalInput {
	customerId: string;
}

export interface PersoonInternalInput {
	bsn: string | number;
}

export interface VoertuigInternalInput {
	bsn: string | number;
}

export type IncrementalDelayInput = ExtractInput<typeof function_IncrementalDelay>;

export type ThemaGetInput = ExtractInput<typeof function_ThemaGet>;

export type UsersGetInput = ExtractInput<typeof function_UsersGet>;

export type UsersSubscribeInput = ExtractInput<typeof function_UsersSubscribe>;

export type UsersUpdateInput = ExtractInput<typeof function_UsersUpdate>;

export interface CustomerInputInternal {
	customerId: string;
	bsn: string | number;
}

export interface CustomerInternalInputInternal {
	customerId: string;
}

export interface PersoonInternalInputInternal {
	bsn: string | number;
}

export interface VoertuigInternalInputInternal {
	bsn: string | number;
}

export interface IncrementalDelayInputInternal {
	seconds: number;
}

export interface ThemaGetInputInternal {
	themaId: string;
	customerId: string;
}

export interface UsersGetInputInternal {
	id: string;
}

export interface UsersSubscribeInputInternal {
	id: string;
}

export interface UsersUpdateInputInternal {
	id: string;
	name: string;
	bio: string;
}

export interface CustomerInputInjected {
	customerId: string;
	bsn: string | number;
}

export interface CustomerInternalInputInjected {
	customerId: string;
}

export interface PersoonInternalInputInjected {
	bsn: string | number;
}

export interface VoertuigInternalInputInjected {
	bsn: string | number;
}

export interface CustomerResponse {
	data?: CustomerResponseData;
	errors?: GraphQLError[];
}

export interface CustomerInternalResponse {
	data?: CustomerInternalResponseData;
	errors?: GraphQLError[];
}

export interface DragonsResponse {
	data?: DragonsResponseData;
	errors?: GraphQLError[];
}

export interface PersoonInternalResponse {
	data?: PersoonInternalResponseData;
	errors?: GraphQLError[];
}

export interface VoertuigInternalResponse {
	data?: VoertuigInternalResponseData;
	errors?: GraphQLError[];
}

export interface IncrementalDataResponse {
	data?: IncrementalDataResponseData;
	errors?: GraphQLError[];
}

export interface IncrementalDelayResponse {
	data?: IncrementalDelayResponseData;
	errors?: GraphQLError[];
}

export interface ThemaGetResponse {
	data?: ThemaGetResponseData;
	errors?: GraphQLError[];
}

export interface UsersGetResponse {
	data?: UsersGetResponseData;
	errors?: GraphQLError[];
}

export interface UsersSubscribeResponse {
	data?: UsersSubscribeResponseData;
	errors?: GraphQLError[];
}

export interface UsersUpdateResponse {
	data?: UsersUpdateResponseData;
	errors?: GraphQLError[];
}

export interface CustomerResponseData {
	klant?: {
		bsn: string;
		_join: {
			persoon?: {
				achternaam: string;
				contactgegevens: string;
				geboortedatum: string;
				tussenvoegsel: string;
				voornaam: string;
				woonplaats: string;
			};
			voertuig?: {
				apk_vervaldatum: string;
				bouwjaar: string | number;
				brandstof: string;
				kenteken: string;
				kleur: string;
				merk: string;
				model: string;
			};
		};
	};
}

export interface CustomerInternalResponseData {
	klant?: {
		bsn: string;
	};
}

export interface DragonsResponseData {
	spacex_dragons?: {
		name?: string;
		active?: boolean;
	}[];
}

export interface PersoonInternalResponseData {
	persoon?: {
		achternaam: string;
		contactgegevens: string;
		geboortedatum: string;
		tussenvoegsel: string;
		voornaam: string;
		woonplaats: string;
	};
}

export interface VoertuigInternalResponseData {
	voertuig?: {
		apk_vervaldatum: string;
		bouwjaar: string | number;
		brandstof: string;
		kenteken: string;
		kleur: string;
		merk: string;
		model: string;
	};
}

export type IncrementalDataResponseData = ExtractResponse<typeof function_IncrementalData>;

export type IncrementalDelayResponseData = ExtractResponse<typeof function_IncrementalDelay>;

export type ThemaGetResponseData = ExtractResponse<typeof function_ThemaGet>;

export type UsersGetResponseData = ExtractResponse<typeof function_UsersGet>;

export type UsersSubscribeResponseData = ExtractResponse<typeof function_UsersSubscribe>;

export type UsersUpdateResponseData = ExtractResponse<typeof function_UsersUpdate>;
